{"ast":null,"code":"var _jsxFileName = \"F:\\\\React\\\\resort\\\\src\\\\component\\\\Context.js\";\nimport React, { Component } from 'react';\nimport Data from '../data';\nconst RoomContext = React.createContext();\n\nclass RoomProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      rooms: [],\n      sortedRoom: [],\n      featuredRoom: [],\n      loading: [],\n      type: 'all',\n      capacity: 1,\n      price: 0,\n      minPrice: 0,\n      maxPrice: 0,\n      minSize: 0,\n      maxSize: 0,\n      breakfast: false,\n      pets: false\n    };\n\n    this.getRoom = slug => {\n      let tempRoom = [...this.state.rooms];\n      const room = tempRoom.find(room => room.slug === slug);\n      return room;\n    };\n\n    this.handleChange = event => {\n      const type = event.target.type;\n      const name = event.target.name;\n      const value = event.target.value;\n    };\n\n    this.filterRooms = () => {};\n  }\n\n  componentDidMount() {\n    let rooms = this.dataFormate(Data);\n    let featuredRoom = rooms.filter(room => room.featured === true);\n    let maxPrice = Math.max(...rooms.map(item => item.price));\n    let maxSize = Math.max(...rooms.map(item => item.size));\n    this.setState({\n      rooms,\n      featuredRoom,\n      sortedRoom: rooms,\n      loading: false,\n      price: maxPrice,\n      maxPrice,\n      maxSize\n    });\n  }\n\n  dataFormate(Data) {\n    let tempItem = Data.map(item => {\n      let id = item.sys.id;\n      let images = item.fields.images.map(image => image.fields.file.url);\n      let room = {\n        id,\n        ...item.fields,\n        images\n      };\n      return room;\n    });\n    return tempItem;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(RoomContext.Provider, {\n      value: { ...this.state,\n        getRoom: this.getRoom\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }, this.props.children);\n  }\n\n}\n\nconst RoomConsumer = RoomContext.Consumer;\nexport function withRoomConsumer(Component) {\n  return function ConsumerWrapper(props) {\n    return /*#__PURE__*/React.createElement(RoomConsumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 16\n      }\n    }, value => /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n      context: value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 24\n      }\n    })));\n  };\n}\nexport { RoomContext, RoomProvider, RoomConsumer };","map":{"version":3,"sources":["F:/React/resort/src/component/Context.js"],"names":["React","Component","Data","RoomContext","createContext","RoomProvider","state","rooms","sortedRoom","featuredRoom","loading","type","capacity","price","minPrice","maxPrice","minSize","maxSize","breakfast","pets","getRoom","slug","tempRoom","room","find","handleChange","event","target","name","value","filterRooms","componentDidMount","dataFormate","filter","featured","Math","max","map","item","size","setState","tempItem","id","sys","images","fields","image","file","url","render","props","children","RoomConsumer","Consumer","withRoomConsumer","ConsumerWrapper"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Data from '../data'\r\nconst RoomContext = React.createContext();\r\n\r\nclass RoomProvider extends Component {\r\n\r\n    state = {\r\n        rooms: [],\r\n        sortedRoom: [],\r\n        featuredRoom: [],\r\n        loading: [],\r\n        type: 'all',\r\n        capacity: 1,\r\n        price: 0,\r\n        minPrice: 0,\r\n        maxPrice: 0,\r\n        minSize: 0,\r\n        maxSize: 0,\r\n        breakfast: false,\r\n        pets: false\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        let rooms = this.dataFormate(Data)\r\n        let featuredRoom = rooms.filter(room => room.featured === true);\r\n        let maxPrice = Math.max(...rooms.map(item => item.price));\r\n        let maxSize = Math.max(...rooms.map(item => item.size));\r\n\r\n        this.setState({\r\n            rooms,\r\n            featuredRoom,\r\n            sortedRoom: rooms,\r\n            loading: false,\r\n            price: maxPrice,\r\n            maxPrice,\r\n            maxSize\r\n        })\r\n    }\r\n\r\n    dataFormate(Data) {\r\n        let tempItem = Data.map((item) => {\r\n            let id = item.sys.id\r\n            let images = item.fields.images.map(image => image.fields.file.url);\r\n            let room = { id, ...item.fields, images }\r\n\r\n            return room;\r\n        })\r\n        return tempItem;\r\n    }\r\n\r\n    getRoom = (slug) => {\r\n        let tempRoom = [...this.state.rooms]\r\n        const room = tempRoom.find(room => room.slug === slug)\r\n        return room;\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        const type = event.target.type;\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n    }\r\n    filterRooms = () => {\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <RoomContext.Provider value={ { ...this.state, getRoom: this.getRoom } }>\r\n                { this.props.children }\r\n            </RoomContext.Provider>\r\n        );\r\n    }\r\n}\r\n\r\nconst RoomConsumer = RoomContext.Consumer;\r\n\r\nexport function withRoomConsumer(Component) {\r\n    return (function ConsumerWrapper(props) {\r\n        return <RoomConsumer>\r\n            { value => <Component { ...props } context={ value } /> }\r\n        </RoomConsumer>\r\n    }\r\n    )\r\n}\r\n\r\nexport { RoomContext, RoomProvider, RoomConsumer };"]},"metadata":{},"sourceType":"module"}