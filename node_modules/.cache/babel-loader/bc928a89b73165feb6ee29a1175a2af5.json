{"ast":null,"code":"var _jsxFileName = \"F:\\\\React\\\\resort\\\\src\\\\component\\\\Context.js\";\nimport React, { Component } from 'react';\nimport Data from '../data';\nconst RoomContext = React.createContext();\n\nclass RoomProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      rooms: [],\n      sortedRoom: [],\n      featuredRoom: [],\n      loading: []\n    };\n\n    this.getRoom = slug => {\n      let tempRoom = [...this.state.rooms];\n      const room = tempRoom.find(room => room.slug === slug);\n      return room;\n    };\n  }\n\n  componentDidMount() {\n    let rooms = this.dataFormate(Data);\n    let featuredRoom = rooms.filter(room => room.featured === true);\n    let sortedRoom = this.rooms;\n    this.setState({\n      rooms,\n      featuredRoom,\n      sortedRoom,\n      loading: false\n    });\n  }\n\n  dataFormate(Data) {\n    let tempItem = Data.map(item => {\n      let id = item.sys.id;\n      let images = item.fields.images.map(image => image.fields.file.url);\n      let room = {\n        id,\n        ...item.fields,\n        images\n      };\n      return room;\n    });\n    return tempItem;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(RoomContext.Provider, {\n      value: { ...this.state,\n        getRoom: this.getRoom\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }, this.props.children);\n  }\n\n}\n\nconst RoomConsumer = RoomContext.Consumer; // export function withRoomConsumer(Component) {\n//     return (function ConsumerWrapper(props) {\n//         return <RoomConsumer>\n//             { value => <Component { ...props } context={ value } /> }\n//         </RoomConsumer>\n//     }\n//     )\n// }\n\nexport { RoomContext, RoomProvider, RoomConsumer };","map":{"version":3,"sources":["F:/React/resort/src/component/Context.js"],"names":["React","Component","Data","RoomContext","createContext","RoomProvider","state","rooms","sortedRoom","featuredRoom","loading","getRoom","slug","tempRoom","room","find","componentDidMount","dataFormate","filter","featured","setState","tempItem","map","item","id","sys","images","fields","image","file","url","render","props","children","RoomConsumer","Consumer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,SAAjB;AAEA,MAAMC,WAAW,GAAGH,KAAK,CAACI,aAAN,EAApB;;AAEA,MAAMC,YAAN,SAA2BJ,SAA3B,CAAqC;AAAA;AAAA;AAAA,SAEjCK,KAFiC,GAEzB;AACJC,MAAAA,KAAK,EAAE,EADH;AAEJC,MAAAA,UAAU,EAAE,EAFR;AAGJC,MAAAA,YAAY,EAAE,EAHV;AAIJC,MAAAA,OAAO,EAAE;AAJL,KAFyB;;AAAA,SAgCjCC,OAhCiC,GAgCtBC,IAAD,IAAU;AAChB,UAAIC,QAAQ,GAAG,CAAC,GAAG,KAAKP,KAAL,CAAWC,KAAf,CAAf;AACA,YAAMO,IAAI,GAAGD,QAAQ,CAACE,IAAT,CAAcD,IAAI,IAAIA,IAAI,CAACF,IAAL,KAAcA,IAApC,CAAb;AACA,aAAOE,IAAP;AACH,KApCgC;AAAA;;AASjCE,EAAAA,iBAAiB,GAAG;AAChB,QAAIT,KAAK,GAAG,KAAKU,WAAL,CAAiBf,IAAjB,CAAZ;AACA,QAAIO,YAAY,GAAGF,KAAK,CAACW,MAAN,CAAaJ,IAAI,IAAIA,IAAI,CAACK,QAAL,KAAkB,IAAvC,CAAnB;AACA,QAAIX,UAAU,GAAG,KAAKD,KAAtB;AACA,SAAKa,QAAL,CAAc;AACVb,MAAAA,KADU;AAEVE,MAAAA,YAFU;AAGVD,MAAAA,UAHU;AAIVE,MAAAA,OAAO,EAAE;AAJC,KAAd;AAMH;;AAEDO,EAAAA,WAAW,CAACf,IAAD,EAAO;AACd,QAAImB,QAAQ,GAAGnB,IAAI,CAACoB,GAAL,CAAUC,IAAD,IAAU;AAC9B,UAAIC,EAAE,GAAGD,IAAI,CAACE,GAAL,CAASD,EAAlB;AACA,UAAIE,MAAM,GAAGH,IAAI,CAACI,MAAL,CAAYD,MAAZ,CAAmBJ,GAAnB,CAAuBM,KAAK,IAAIA,KAAK,CAACD,MAAN,CAAaE,IAAb,CAAkBC,GAAlD,CAAb;AACA,UAAIhB,IAAI,GAAG;AAAEU,QAAAA,EAAF;AAAM,WAAGD,IAAI,CAACI,MAAd;AAAsBD,QAAAA;AAAtB,OAAX;AAEA,aAAOZ,IAAP;AACH,KANc,CAAf;AAOA,WAAOO,QAAP;AACH;;AAQDU,EAAAA,MAAM,GAAG;AACL,wBACI,oBAAC,WAAD,CAAa,QAAb;AAAsB,MAAA,KAAK,EAAG,EAAE,GAAG,KAAKzB,KAAV;AAAiBK,QAAAA,OAAO,EAAE,KAAKA;AAA/B,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACM,KAAKqB,KAAL,CAAWC,QADjB,CADJ;AAKH;;AA5CgC;;AA+CrC,MAAMC,YAAY,GAAG/B,WAAW,CAACgC,QAAjC,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAAShC,WAAT,EAAsBE,YAAtB,EAAoC6B,YAApC","sourcesContent":["import React, { Component } from 'react';\r\nimport Data from '../data'\r\n\r\nconst RoomContext = React.createContext();\r\n\r\nclass RoomProvider extends Component {\r\n\r\n    state = {\r\n        rooms: [],\r\n        sortedRoom: [],\r\n        featuredRoom: [],\r\n        loading: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        let rooms = this.dataFormate(Data)\r\n        let featuredRoom = rooms.filter(room => room.featured === true);\r\n        let sortedRoom = this.rooms;\r\n        this.setState({\r\n            rooms,\r\n            featuredRoom,\r\n            sortedRoom,\r\n            loading: false\r\n        })\r\n    }\r\n\r\n    dataFormate(Data) {\r\n        let tempItem = Data.map((item) => {\r\n            let id = item.sys.id\r\n            let images = item.fields.images.map(image => image.fields.file.url);\r\n            let room = { id, ...item.fields, images }\r\n\r\n            return room;\r\n        })\r\n        return tempItem;\r\n    }\r\n\r\n    getRoom = (slug) => {\r\n        let tempRoom = [...this.state.rooms]\r\n        const room = tempRoom.find(room => room.slug === slug)\r\n        return room;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <RoomContext.Provider value={ { ...this.state, getRoom: this.getRoom } }>\r\n                { this.props.children }\r\n            </RoomContext.Provider>\r\n        );\r\n    }\r\n}\r\n\r\nconst RoomConsumer = RoomContext.Consumer;\r\n\r\n// export function withRoomConsumer(Component) {\r\n//     return (function ConsumerWrapper(props) {\r\n//         return <RoomConsumer>\r\n//             { value => <Component { ...props } context={ value } /> }\r\n//         </RoomConsumer>\r\n//     }\r\n//     )\r\n// }\r\nexport { RoomContext, RoomProvider, RoomConsumer };"]},"metadata":{},"sourceType":"module"}